from collections.abc import Iterable
from random import shuffle
from collections import deque

from .tile import Tile

deck: list[Tile] = [
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    6,
    6,
    6,
    6,
    7,
    7,
    7,
    7,
    8,
    8,
    8,
    8,
    9,
    9,
    9,
    9,
    11,
    11,
    11,
    11,
    12,
    12,
    12,
    12,
    13,
    13,
    13,
    13,
    14,
    14,
    14,
    14,
    15,
    15,
    15,
    15,
    16,
    16,
    16,
    16,
    17,
    17,
    17,
    17,
    18,
    18,
    18,
    18,
    19,
    19,
    19,
    19,
    21,
    21,
    21,
    21,
    22,
    22,
    22,
    22,
    23,
    23,
    23,
    23,
    24,
    24,
    24,
    24,
    25,
    25,
    25,
    25,
    26,
    26,
    26,
    26,
    27,
    27,
    27,
    27,
    28,
    28,
    28,
    28,
    29,
    29,
    29,
    29,
    31,
    31,
    31,
    31,
    32,
    32,
    32,
    32,
    33,
    33,
    33,
    33,
    34,
    34,
    34,
    34,
    35,
    35,
    35,
    35,
    36,
    36,
    36,
    36,
    37,
    37,
    37,
    37,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    48,
]


class Deck:
    def __init__(self, tiles: Iterable[Tile]):
        self._tiles = deque(tiles)

    @classmethod
    def shuffled_deck(cls):
        new_deck = deck.copy()
        shuffle(new_deck)
        return cls(new_deck)

    @property
    def tiles(self):
        return tuple(self._tiles)

    def pop(self):
        return self._tiles.popleft()

    def popleft(self):
        return self._tiles.pop()
